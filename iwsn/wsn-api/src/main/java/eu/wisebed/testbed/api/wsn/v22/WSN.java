
package eu.wisebed.testbed.api.wsn.v22;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WSN", targetNamespace = "urn:WSNService")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSN {


    /**
     * 
     * @param controllerEndpointUrl
     */
    @WebMethod
    @RequestWrapper(localName = "addController", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.AddController")
    @ResponseWrapper(localName = "addControllerResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.AddControllerResponse")
    public void addController(
        @WebParam(name = "controllerEndpointUrl", targetNamespace = "")
        String controllerEndpointUrl);

    /**
     * 
     * @param controllerEndpointUrl
     */
    @WebMethod
    @RequestWrapper(localName = "removeController", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.RemoveController")
    @ResponseWrapper(localName = "removeControllerResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.RemoveControllerResponse")
    public void removeController(
        @WebParam(name = "controllerEndpointUrl", targetNamespace = "")
        String controllerEndpointUrl);

    /**
     * 
     * @param message
     * @param nodeIds
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "send", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.Send")
    @ResponseWrapper(localName = "sendResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SendResponse")
    public String send(
        @WebParam(name = "nodeIds", targetNamespace = "")
        List<String> nodeIds,
        @WebParam(name = "message", targetNamespace = "")
        Message message);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVersion", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetVersion")
    @ResponseWrapper(localName = "getVersionResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetVersionResponse")
    public String getVersion();

    /**
     * 
     * @param nodes
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "areNodesAlive", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.AreNodesAlive")
    @ResponseWrapper(localName = "areNodesAliveResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.AreNodesAliveResponse")
    public String areNodesAlive(
        @WebParam(name = "nodes", targetNamespace = "")
        List<String> nodes);

    /**
     * 
     * @param newNetwork
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "defineNetwork", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DefineNetwork")
    @ResponseWrapper(localName = "defineNetworkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DefineNetworkResponse")
    public String defineNetwork(
        @WebParam(name = "newNetwork", targetNamespace = "")
        String newNetwork);

    /**
     * 
     * @param capability
     * @return
     *     returns java.lang.String
     * @throws UnsupportedOperationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "describeCapabilities", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DescribeCapabilities")
    @ResponseWrapper(localName = "describeCapabilitiesResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DescribeCapabilitiesResponse")
    public String describeCapabilities(
        @WebParam(name = "capability", targetNamespace = "")
        String capability)
        throws UnsupportedOperationException_Exception
    ;

    /**
     * 
     * @param targetNode
     * @param sourceNode
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "destroyVirtualLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DestroyVirtualLink")
    @ResponseWrapper(localName = "destroyVirtualLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SetVirtualLinkResponse")
    public String destroyVirtualLink(
        @WebParam(name = "sourceNode", targetNamespace = "")
        String sourceNode,
        @WebParam(name = "targetNode", targetNamespace = "")
        String targetNode);

    /**
     * 
     * @param node
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "disableNode", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DisableNode")
    @ResponseWrapper(localName = "disableNodeResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DisableNodeResponse")
    public String disableNode(
        @WebParam(name = "node", targetNamespace = "")
        String node);

    /**
     * 
     * @param nodeB
     * @param nodeA
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "disablePhysicalLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DisablePhysicalLink")
    @ResponseWrapper(localName = "disablePhysicalLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.DisablePhysicalLinkResponse")
    public String disablePhysicalLink(
        @WebParam(name = "nodeA", targetNamespace = "")
        String nodeA,
        @WebParam(name = "nodeB", targetNamespace = "")
        String nodeB);

    /**
     * 
     * @param node
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enableNode", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.EnableNode")
    @ResponseWrapper(localName = "enableNodeResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.EnableNodeResponse")
    public String enableNode(
        @WebParam(name = "node", targetNamespace = "")
        String node);

    /**
     * 
     * @param nodeB
     * @param nodeA
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enablePhysicalLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.EnablePhysicalLink")
    @ResponseWrapper(localName = "enablePhysicalLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.EnablePhysicalLinkResponse")
    public String enablePhysicalLink(
        @WebParam(name = "nodeA", targetNamespace = "")
        String nodeA,
        @WebParam(name = "nodeB", targetNamespace = "")
        String nodeB);

    /**
     * 
     * @param programs
     * @param programIndices
     * @param nodeIds
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "flashPrograms", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.FlashPrograms")
    @ResponseWrapper(localName = "flashProgramsResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.FlashProgramsResponse")
    public String flashPrograms(
        @WebParam(name = "nodeIds", targetNamespace = "")
        List<String> nodeIds,
        @WebParam(name = "programIndices", targetNamespace = "")
        List<Integer> programIndices,
        @WebParam(name = "programs", targetNamespace = "")
        List<Program> programs);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFilters", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetFilters")
    @ResponseWrapper(localName = "getFiltersResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetFiltersResponse")
    public List<String> getFilters();

    /**
     * 
     * @param node
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws UnknownNodeUrnException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNeighbourhood", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetNeighbourhood")
    @ResponseWrapper(localName = "getNeighbourhoodResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetNeighbourhoodResponse")
    public List<String> getNeighbourhood(
        @WebParam(name = "node", targetNamespace = "")
        String node)
        throws UnknownNodeUrnException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNetwork", targetNamespace = "urn:CommonTypes", className = "eu.wisebed.testbed.api.wsn.v22.GetNetwork")
    @ResponseWrapper(localName = "getNetworkResponse", targetNamespace = "urn:CommonTypes", className = "eu.wisebed.testbed.api.wsn.v22.GetNetworkResponse")
    public String getNetwork();

    /**
     * 
     * @param propertyName
     * @param node
     * @return
     *     returns java.lang.String
     * @throws UnknownNodeUrnException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPropertyValueOf", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetPropertyValueOf")
    @ResponseWrapper(localName = "getPropertyValueOfResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.GetPropertyValueOfResponse")
    public String getPropertyValueOf(
        @WebParam(name = "node", targetNamespace = "")
        String node,
        @WebParam(name = "propertyName", targetNamespace = "")
        String propertyName)
        throws UnknownNodeUrnException_Exception
    ;

    /**
     * 
     * @param nodes
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetNodes", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.ResetNodes")
    @ResponseWrapper(localName = "resetNodesResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.ResetNodesResponse")
    public String resetNodes(
        @WebParam(name = "nodes", targetNamespace = "")
        List<String> nodes);

    /**
     * 
     * @param time
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setStartTime", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SetStartTime")
    @ResponseWrapper(localName = "setStartTimeResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SetStartTimeResponse")
    public String setStartTime(
        @WebParam(name = "time", targetNamespace = "")
        XMLGregorianCalendar time);

    /**
     * 
     * @param targetNode
     * @param remoteServiceInstance
     * @param sourceNode
     * @param parameters
     * @param filters
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setVirtualLink", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SetVirtualLink")
    @ResponseWrapper(localName = "setVirtualLinkResponse", targetNamespace = "urn:WSNService", className = "eu.wisebed.testbed.api.wsn.v22.SetVirtualLinkResponse")
    public String setVirtualLink(
        @WebParam(name = "sourceNode", targetNamespace = "")
        String sourceNode,
        @WebParam(name = "targetNode", targetNamespace = "")
        String targetNode,
        @WebParam(name = "remoteServiceInstance", targetNamespace = "")
        String remoteServiceInstance,
        @WebParam(name = "parameters", targetNamespace = "")
        List<String> parameters,
        @WebParam(name = "filters", targetNamespace = "")
        List<String> filters);

}
